// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: soapstone.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SoapstoneLib.Proto.Internal {
  public static partial class Soapstone
  {
    static readonly string __ServiceName = "SoapstoneLib.Proto.Internal.Soapstone";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.ServerInfoRequest> __Marshaller_SoapstoneLib_Proto_ServerInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.ServerInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.ServerInfoResponse> __Marshaller_SoapstoneLib_Proto_ServerInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.ServerInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.SearchObjectsRequest> __Marshaller_SoapstoneLib_Proto_Internal_SearchObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.SearchObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.SearchObjectsResponse> __Marshaller_SoapstoneLib_Proto_Internal_SearchObjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.SearchObjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.GetObjectRequest> __Marshaller_SoapstoneLib_Proto_Internal_GetObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.GetObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.GetObjectResponse> __Marshaller_SoapstoneLib_Proto_Internal_GetObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.GetObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest> __Marshaller_SoapstoneLib_Proto_Internal_BatchGetObjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse> __Marshaller_SoapstoneLib_Proto_Internal_BatchGetObjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenResourceRequest> __Marshaller_SoapstoneLib_Proto_Internal_OpenResourceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenResourceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenResourceResponse> __Marshaller_SoapstoneLib_Proto_Internal_OpenResourceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenResourceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenObjectRequest> __Marshaller_SoapstoneLib_Proto_Internal_OpenObjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenObjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenObjectResponse> __Marshaller_SoapstoneLib_Proto_Internal_OpenObjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenObjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenSearchRequest> __Marshaller_SoapstoneLib_Proto_Internal_OpenSearchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenSearchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::SoapstoneLib.Proto.Internal.OpenSearchResponse> __Marshaller_SoapstoneLib_Proto_Internal_OpenSearchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::SoapstoneLib.Proto.Internal.OpenSearchResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.ServerInfoRequest, global::SoapstoneLib.Proto.ServerInfoResponse> __Method_GetServerInfo = new grpc::Method<global::SoapstoneLib.Proto.ServerInfoRequest, global::SoapstoneLib.Proto.ServerInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetServerInfo",
        __Marshaller_SoapstoneLib_Proto_ServerInfoRequest,
        __Marshaller_SoapstoneLib_Proto_ServerInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.SearchObjectsRequest, global::SoapstoneLib.Proto.Internal.SearchObjectsResponse> __Method_SearchObjects = new grpc::Method<global::SoapstoneLib.Proto.Internal.SearchObjectsRequest, global::SoapstoneLib.Proto.Internal.SearchObjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchObjects",
        __Marshaller_SoapstoneLib_Proto_Internal_SearchObjectsRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_SearchObjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.GetObjectRequest, global::SoapstoneLib.Proto.Internal.GetObjectResponse> __Method_GetObject = new grpc::Method<global::SoapstoneLib.Proto.Internal.GetObjectRequest, global::SoapstoneLib.Proto.Internal.GetObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetObject",
        __Marshaller_SoapstoneLib_Proto_Internal_GetObjectRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_GetObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest, global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse> __Method_BatchGetObjects = new grpc::Method<global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest, global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BatchGetObjects",
        __Marshaller_SoapstoneLib_Proto_Internal_BatchGetObjectsRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_BatchGetObjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.OpenResourceRequest, global::SoapstoneLib.Proto.Internal.OpenResourceResponse> __Method_OpenResource = new grpc::Method<global::SoapstoneLib.Proto.Internal.OpenResourceRequest, global::SoapstoneLib.Proto.Internal.OpenResourceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenResource",
        __Marshaller_SoapstoneLib_Proto_Internal_OpenResourceRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_OpenResourceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.OpenObjectRequest, global::SoapstoneLib.Proto.Internal.OpenObjectResponse> __Method_OpenObject = new grpc::Method<global::SoapstoneLib.Proto.Internal.OpenObjectRequest, global::SoapstoneLib.Proto.Internal.OpenObjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenObject",
        __Marshaller_SoapstoneLib_Proto_Internal_OpenObjectRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_OpenObjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::SoapstoneLib.Proto.Internal.OpenSearchRequest, global::SoapstoneLib.Proto.Internal.OpenSearchResponse> __Method_OpenSearch = new grpc::Method<global::SoapstoneLib.Proto.Internal.OpenSearchRequest, global::SoapstoneLib.Proto.Internal.OpenSearchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenSearch",
        __Marshaller_SoapstoneLib_Proto_Internal_OpenSearchRequest,
        __Marshaller_SoapstoneLib_Proto_Internal_OpenSearchResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SoapstoneLib.Proto.Internal.SoapstoneReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Soapstone</summary>
    [grpc::BindServiceMethod(typeof(Soapstone), "BindService")]
    public abstract partial class SoapstoneBase
    {
      /// <summary>
      /// Returns basic info about the editor's current state. All servers must implement this.
      /// Editor resources are parts of an editor which can be individually loaded or unloaded.
      /// Once a resource is loaded, various objects and functionality can be straightforwardly accessed within it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.ServerInfoResponse> GetServerInfo(global::SoapstoneLib.Proto.ServerInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get objects matching a search query, with requested properties.
      /// A property does not have to be requested to search against it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.SearchObjectsResponse> SearchObjects(global::SoapstoneLib.Proto.Internal.SearchObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns a single object, within an editor resource type.
      /// This can be used if the exact key is known, or to get more properties after a broader search.
      /// It returns empty if object is not found (as opposed to an error).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.GetObjectResponse> GetObject(global::SoapstoneLib.Proto.Internal.GetObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns objects in batch, within an editor resource type.
      /// It returns only the objects which could be found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse> BatchGetObjects(global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Open a resource, like a map by name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.OpenResourceResponse> OpenResource(global::SoapstoneLib.Proto.Internal.OpenResourceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Jump to or frame the given object within the editor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.OpenObjectResponse> OpenObject(global::SoapstoneLib.Proto.Internal.OpenObjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start a given search in the editor.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::SoapstoneLib.Proto.Internal.OpenSearchResponse> OpenSearch(global::SoapstoneLib.Proto.Internal.OpenSearchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Soapstone</summary>
    public partial class SoapstoneClient : grpc::ClientBase<SoapstoneClient>
    {
      /// <summary>Creates a new client for Soapstone</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SoapstoneClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Soapstone that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SoapstoneClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SoapstoneClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SoapstoneClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns basic info about the editor's current state. All servers must implement this.
      /// Editor resources are parts of an editor which can be individually loaded or unloaded.
      /// Once a resource is loaded, various objects and functionality can be straightforwardly accessed within it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.ServerInfoResponse GetServerInfo(global::SoapstoneLib.Proto.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns basic info about the editor's current state. All servers must implement this.
      /// Editor resources are parts of an editor which can be individually loaded or unloaded.
      /// Once a resource is loaded, various objects and functionality can be straightforwardly accessed within it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.ServerInfoResponse GetServerInfo(global::SoapstoneLib.Proto.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetServerInfo, null, options, request);
      }
      /// <summary>
      /// Returns basic info about the editor's current state. All servers must implement this.
      /// Editor resources are parts of an editor which can be individually loaded or unloaded.
      /// Once a resource is loaded, various objects and functionality can be straightforwardly accessed within it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.ServerInfoResponse> GetServerInfoAsync(global::SoapstoneLib.Proto.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetServerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns basic info about the editor's current state. All servers must implement this.
      /// Editor resources are parts of an editor which can be individually loaded or unloaded.
      /// Once a resource is loaded, various objects and functionality can be straightforwardly accessed within it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.ServerInfoResponse> GetServerInfoAsync(global::SoapstoneLib.Proto.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetServerInfo, null, options, request);
      }
      /// <summary>
      /// Get objects matching a search query, with requested properties.
      /// A property does not have to be requested to search against it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.SearchObjectsResponse SearchObjects(global::SoapstoneLib.Proto.Internal.SearchObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get objects matching a search query, with requested properties.
      /// A property does not have to be requested to search against it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.SearchObjectsResponse SearchObjects(global::SoapstoneLib.Proto.Internal.SearchObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchObjects, null, options, request);
      }
      /// <summary>
      /// Get objects matching a search query, with requested properties.
      /// A property does not have to be requested to search against it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.SearchObjectsResponse> SearchObjectsAsync(global::SoapstoneLib.Proto.Internal.SearchObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get objects matching a search query, with requested properties.
      /// A property does not have to be requested to search against it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.SearchObjectsResponse> SearchObjectsAsync(global::SoapstoneLib.Proto.Internal.SearchObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchObjects, null, options, request);
      }
      /// <summary>
      /// Returns a single object, within an editor resource type.
      /// This can be used if the exact key is known, or to get more properties after a broader search.
      /// It returns empty if object is not found (as opposed to an error).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.GetObjectResponse GetObject(global::SoapstoneLib.Proto.Internal.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a single object, within an editor resource type.
      /// This can be used if the exact key is known, or to get more properties after a broader search.
      /// It returns empty if object is not found (as opposed to an error).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.GetObjectResponse GetObject(global::SoapstoneLib.Proto.Internal.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Returns a single object, within an editor resource type.
      /// This can be used if the exact key is known, or to get more properties after a broader search.
      /// It returns empty if object is not found (as opposed to an error).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.GetObjectResponse> GetObjectAsync(global::SoapstoneLib.Proto.Internal.GetObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns a single object, within an editor resource type.
      /// This can be used if the exact key is known, or to get more properties after a broader search.
      /// It returns empty if object is not found (as opposed to an error).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.GetObjectResponse> GetObjectAsync(global::SoapstoneLib.Proto.Internal.GetObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetObject, null, options, request);
      }
      /// <summary>
      /// Returns objects in batch, within an editor resource type.
      /// It returns only the objects which could be found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse BatchGetObjects(global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchGetObjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns objects in batch, within an editor resource type.
      /// It returns only the objects which could be found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse BatchGetObjects(global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BatchGetObjects, null, options, request);
      }
      /// <summary>
      /// Returns objects in batch, within an editor resource type.
      /// It returns only the objects which could be found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse> BatchGetObjectsAsync(global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BatchGetObjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns objects in batch, within an editor resource type.
      /// It returns only the objects which could be found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse> BatchGetObjectsAsync(global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BatchGetObjects, null, options, request);
      }
      /// <summary>
      /// Open a resource, like a map by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenResourceResponse OpenResource(global::SoapstoneLib.Proto.Internal.OpenResourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenResource(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Open a resource, like a map by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenResourceResponse OpenResource(global::SoapstoneLib.Proto.Internal.OpenResourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenResource, null, options, request);
      }
      /// <summary>
      /// Open a resource, like a map by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenResourceResponse> OpenResourceAsync(global::SoapstoneLib.Proto.Internal.OpenResourceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenResourceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Open a resource, like a map by name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenResourceResponse> OpenResourceAsync(global::SoapstoneLib.Proto.Internal.OpenResourceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenResource, null, options, request);
      }
      /// <summary>
      /// Jump to or frame the given object within the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenObjectResponse OpenObject(global::SoapstoneLib.Proto.Internal.OpenObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenObject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Jump to or frame the given object within the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenObjectResponse OpenObject(global::SoapstoneLib.Proto.Internal.OpenObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenObject, null, options, request);
      }
      /// <summary>
      /// Jump to or frame the given object within the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenObjectResponse> OpenObjectAsync(global::SoapstoneLib.Proto.Internal.OpenObjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenObjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Jump to or frame the given object within the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenObjectResponse> OpenObjectAsync(global::SoapstoneLib.Proto.Internal.OpenObjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenObject, null, options, request);
      }
      /// <summary>
      /// Start a given search in the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenSearchResponse OpenSearch(global::SoapstoneLib.Proto.Internal.OpenSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenSearch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a given search in the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::SoapstoneLib.Proto.Internal.OpenSearchResponse OpenSearch(global::SoapstoneLib.Proto.Internal.OpenSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenSearch, null, options, request);
      }
      /// <summary>
      /// Start a given search in the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenSearchResponse> OpenSearchAsync(global::SoapstoneLib.Proto.Internal.OpenSearchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenSearchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a given search in the editor.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::SoapstoneLib.Proto.Internal.OpenSearchResponse> OpenSearchAsync(global::SoapstoneLib.Proto.Internal.OpenSearchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenSearch, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SoapstoneClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SoapstoneClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SoapstoneBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetServerInfo, serviceImpl.GetServerInfo)
          .AddMethod(__Method_SearchObjects, serviceImpl.SearchObjects)
          .AddMethod(__Method_GetObject, serviceImpl.GetObject)
          .AddMethod(__Method_BatchGetObjects, serviceImpl.BatchGetObjects)
          .AddMethod(__Method_OpenResource, serviceImpl.OpenResource)
          .AddMethod(__Method_OpenObject, serviceImpl.OpenObject)
          .AddMethod(__Method_OpenSearch, serviceImpl.OpenSearch).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SoapstoneBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.ServerInfoRequest, global::SoapstoneLib.Proto.ServerInfoResponse>(serviceImpl.GetServerInfo));
      serviceBinder.AddMethod(__Method_SearchObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.SearchObjectsRequest, global::SoapstoneLib.Proto.Internal.SearchObjectsResponse>(serviceImpl.SearchObjects));
      serviceBinder.AddMethod(__Method_GetObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.GetObjectRequest, global::SoapstoneLib.Proto.Internal.GetObjectResponse>(serviceImpl.GetObject));
      serviceBinder.AddMethod(__Method_BatchGetObjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.BatchGetObjectsRequest, global::SoapstoneLib.Proto.Internal.BatchGetObjectsResponse>(serviceImpl.BatchGetObjects));
      serviceBinder.AddMethod(__Method_OpenResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.OpenResourceRequest, global::SoapstoneLib.Proto.Internal.OpenResourceResponse>(serviceImpl.OpenResource));
      serviceBinder.AddMethod(__Method_OpenObject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.OpenObjectRequest, global::SoapstoneLib.Proto.Internal.OpenObjectResponse>(serviceImpl.OpenObject));
      serviceBinder.AddMethod(__Method_OpenSearch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SoapstoneLib.Proto.Internal.OpenSearchRequest, global::SoapstoneLib.Proto.Internal.OpenSearchResponse>(serviceImpl.OpenSearch));
    }

  }
}
#endregion
