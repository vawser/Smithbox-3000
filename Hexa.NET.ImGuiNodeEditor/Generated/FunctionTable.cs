// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;

namespace Hexa.NET.ImGuiNodeEditor
{
	public unsafe partial class ImGuiNodeEditor
	{
		internal static FunctionTable funcTable;

		/// <summary>
		/// Initializes the function table, automatically called. Do not call manually, only after <see cref="FreeApi"/>.
		/// </summary>
		public static void InitApi(INativeContext context)
		{
			funcTable = new FunctionTable(context, 107);
			funcTable.Load(0, "SetCurrentEditor");
			funcTable.Load(1, "GetCurrentEditor");
			funcTable.Load(2, "CreateEditor");
			funcTable.Load(3, "DestroyEditor");
			funcTable.Load(4, "GetConfig");
			funcTable.Load(5, "GetStyle");
			funcTable.Load(6, "GetStyleColorName");
			funcTable.Load(7, "PushStyleColor");
			funcTable.Load(8, "PopStyleColor");
			funcTable.Load(9, "PushStyleVar");
			funcTable.Load(10, "PopStyleVar");
			funcTable.Load(11, "Begin");
			funcTable.Load(12, "End");
			funcTable.Load(13, "BeginNode");
			funcTable.Load(14, "BeginPin");
			funcTable.Load(15, "PinRect");
			funcTable.Load(16, "PinPivotRect");
			funcTable.Load(17, "PinPivotSize");
			funcTable.Load(18, "PinPivotScale");
			funcTable.Load(19, "PinPivotAlignment");
			funcTable.Load(20, "EndPin");
			funcTable.Load(21, "Group");
			funcTable.Load(22, "EndNode");
			funcTable.Load(23, "BeginGroupHint");
			funcTable.Load(24, "GetGroupMin");
			funcTable.Load(25, "GetGroupMax");
			funcTable.Load(26, "GetHintForegroundDrawList");
			funcTable.Load(27, "GetHintBackgroundDrawList");
			funcTable.Load(28, "EndGroupHint");
			funcTable.Load(29, "GetNodeBackgroundDrawList");
			funcTable.Load(30, "Link");
			funcTable.Load(31, "Flow");
			funcTable.Load(32, "BeginCreate");
			funcTable.Load(33, "QueryNewLink");
			funcTable.Load(34, "QueryNewNode");
			funcTable.Load(35, "AcceptNewItem");
			funcTable.Load(36, "RejectNewItem");
			funcTable.Load(37, "EndCreate");
			funcTable.Load(38, "BeginDelete");
			funcTable.Load(39, "QueryDeletedLink");
			funcTable.Load(40, "QueryDeletedNode");
			funcTable.Load(41, "AcceptDeletedItem");
			funcTable.Load(42, "RejectDeletedItem");
			funcTable.Load(43, "EndDelete");
			funcTable.Load(44, "SetNodePosition");
			funcTable.Load(45, "SetGroupSize");
			funcTable.Load(46, "GetNodePosition");
			funcTable.Load(47, "GetNodeSize");
			funcTable.Load(48, "CenterNodeOnScreen");
			funcTable.Load(49, "SetNodeZPosition");
			funcTable.Load(50, "GetNodeZPosition");
			funcTable.Load(51, "RestoreNodeState");
			funcTable.Load(52, "Suspend");
			funcTable.Load(53, "Resume");
			funcTable.Load(54, "IsSuspended");
			funcTable.Load(55, "IsActive");
			funcTable.Load(56, "HasSelectionChanged");
			funcTable.Load(57, "GetSelectedObjectCount");
			funcTable.Load(58, "GetSelectedNodes");
			funcTable.Load(59, "GetSelectedLinks");
			funcTable.Load(60, "IsNodeSelected");
			funcTable.Load(61, "IsLinkSelected");
			funcTable.Load(62, "ClearSelection");
			funcTable.Load(63, "SelectNode");
			funcTable.Load(64, "SelectLink");
			funcTable.Load(65, "DeselectNode");
			funcTable.Load(66, "DeselectLink");
			funcTable.Load(67, "DeleteNode");
			funcTable.Load(68, "DeleteLink");
			funcTable.Load(69, "HasAnyLinks");
			funcTable.Load(70, "BreakLinks");
			funcTable.Load(71, "NavigateToContent");
			funcTable.Load(72, "NavigateToSelection");
			funcTable.Load(73, "ShowNodeContextMenu");
			funcTable.Load(74, "ShowPinContextMenu");
			funcTable.Load(75, "ShowLinkContextMenu");
			funcTable.Load(76, "ShowBackgroundContextMenu");
			funcTable.Load(77, "EnableShortcuts");
			funcTable.Load(78, "AreShortcutsEnabled");
			funcTable.Load(79, "BeginShortcut");
			funcTable.Load(80, "AcceptCut");
			funcTable.Load(81, "AcceptCopy");
			funcTable.Load(82, "AcceptPaste");
			funcTable.Load(83, "AcceptDuplicate");
			funcTable.Load(84, "AcceptCreateNode");
			funcTable.Load(85, "GetActionContextSize");
			funcTable.Load(86, "GetActionContextNodes");
			funcTable.Load(87, "GetActionContextLinks");
			funcTable.Load(88, "EndShortcut");
			funcTable.Load(89, "GetCurrentZoom");
			funcTable.Load(90, "GetHoveredNode");
			funcTable.Load(91, "GetHoveredPin");
			funcTable.Load(92, "GetHoveredLink");
			funcTable.Load(93, "GetDoubleClickedNode");
			funcTable.Load(94, "GetDoubleClickedPin");
			funcTable.Load(95, "GetDoubleClickedLink");
			funcTable.Load(96, "IsBackgroundClicked");
			funcTable.Load(97, "IsBackgroundDoubleClicked");
			funcTable.Load(98, "GetBackgroundClickButtonIndex");
			funcTable.Load(99, "GetBackgroundDoubleClickButtonIndex");
			funcTable.Load(100, "GetLinkPins");
			funcTable.Load(101, "PinHadAnyLinks");
			funcTable.Load(102, "GetScreenSize");
			funcTable.Load(103, "ScreenToCanvas");
			funcTable.Load(104, "CanvasToScreen");
			funcTable.Load(105, "GetNodeCount");
			funcTable.Load(106, "GetOrderedNodeIds");
		}

		public static void FreeApi()
		{
			funcTable.Free();
		}
	}
}
