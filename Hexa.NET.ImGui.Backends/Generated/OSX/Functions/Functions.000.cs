// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;
using System.Numerics;
using Hexa.NET.ImGui;

namespace Hexa.NET.ImGui.Backends.OSX
{
	public unsafe partial class ImGuiImplOSX
	{
		/// <summary>
		/// To be documented.
		/// </summary>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static byte InitNative(void* view)
		{
			#if NET5_0_OR_GREATER
			return ((delegate* unmanaged[Cdecl]<void*, byte>)funcTable[66])(view);
			#else
			return (byte)((delegate* unmanaged[Cdecl]<nint, byte>)funcTable[66])((nint)view);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static bool Init(void* view)
		{
			byte ret = InitNative(view);
			return ret != 0;
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void ShutdownNative()
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<void>)funcTable[67])();
			#else
			((delegate* unmanaged[Cdecl]<void>)funcTable[67])();
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void Shutdown()
		{
			ShutdownNative();
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		[MethodImpl(MethodImplOptions.AggressiveInlining)]
		internal static void NewFrameNative(void* view)
		{
			#if NET5_0_OR_GREATER
			((delegate* unmanaged[Cdecl]<void*, void>)funcTable[68])(view);
			#else
			((delegate* unmanaged[Cdecl]<nint, void>)funcTable[68])((nint)view);
			#endif
		}

		/// <summary>
		/// To be documented.
		/// </summary>
		public static void NewFrame(void* view)
		{
			NewFrameNative(view);
		}

	}
}
